name: CI

on:
  workflow_dispatch:
  
  push:
    branches:
      - main
      - develop

    tags:
      - '*'

  pull_request:

jobs:

# ----------------------------------------------------------------------
  # NODE BUILD
  # ----------------------------------------------------------------------
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        node:
          - "14"
          - "16"
    steps:
    # checkout source code
    - uses: actions/checkout@v2

    # setup node
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node }}

    # install dependencies
    - name: install dependencies
      run: npm install

    # compile UI
    - name: build
      run: npm run build

    # ----------------------------------------------------------------------
  # DOCKER BUILD
  # ----------------------------------------------------------------------
  docker:
    runs-on: ubuntu-latest

    steps:
    # checkout source code
    - uses: actions/checkout@v2

   # calculate some variables that are used later
    - name: version information
      run: |
        if [ "${{ github.event.release.target_commitish }}" != "" ]; then
          BRANCH="${{ github.event.release.target_commitish }}"
        elif [[ $GITHUB_REF =~ pull ]]; then
          BRANCH="$(echo $GITHUB_REF | sed 's#refs/pull/\([0-9]*\)/merge#PR-\1#')"
        else
          BRANCH=${GITHUB_REF##*/}
        fi
        echo "GITHUB_BRANCH=${BRANCH}" >> $GITHUB_ENV
        if [ "$BRANCH" == "main" ]; then
          version=$(cat package.json | grep \"version\" | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,",]//g' | tr -d '[[:space:]]')
          tags="latest"
          oldversion=""
          while [ "${oldversion}" != "${version}" ]; do
            oldversion="${version}"
            tags="${tags},${version}"
            version=${version%.*}
          done
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "TAGS=${tags}" >> $GITHUB_ENV
        elif [ "$BRANCH" == "develop" ]; then
          echo "VERSION=develop" >> $GITHUB_ENV
          echo "TAGS=develop" >> $GITHUB_ENV
        else
          echo "VERSION=testing" >> $GITHUB_ENV
          echo "TAGS=${BRANCH}" >> $GITHUB_ENV
        fi

    # build image
    - name: Build image
      uses: elgohr/Publish-Docker-Github-Action@3.04
      env:
        BRANCH: ${{ env.GITHUB_BRANCH }}
        VERSION: ${{ env.VERSION }}
        BUILDNUMBER: ${{ github.run_number }}
        GITSHA1: ${{ github.sha }}
      with:
        name: oceans-1876/frontend
        tags: "${{ env.TAGS }}"
        buildargs: BRANCH,VERSION,BUILDNUMBER,GITSHA1,PUBLIC_PATH
        no_push: true
        dockerfile: docker/Dockerfile
  redeploy:
    name: Redeploy Portal - Webhook call
    runs-on: ubuntu-18.04
    needs: [docker]
    steps:
      - name: Deploy docker container webhook
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL_DEV  }}
          headers: '{"X-Hub-Signature": "${{ secrets.WEBHOOK_SECRET_DEV }}"}'
